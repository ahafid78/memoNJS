//MEMO

// sequelize = orm

/////////////////////////////

Code de statut HTTP : 

Classement code HTTP en 05 grandes familles:
1xx: L'information
meta données (au niveau du protocole d'information = pas de données de transfert entre entre client et serveur) : 

2xx : Le succès
exemple : 200,201

3xx: La redirection 
exemple : 301,302 (effectuer une deuxieme requette pour aller a une ressource qui a été déplacée)

4xx: Erreur du client 
exemple: 401 (pas autorisé a acceder a une ressource), 404 (ressource demandée introuvable)

5xx: Erreur du serveur
exemple : 
500 (probleme au niveau du serveur)
503 erreur coté serveur (exemple= video temporairement non disponible)

Résumé :

Codes utilisés :

200 succès
4xx erreur coté client (exemple: 400= le core de la requete incorecte, 401= client non authentifié, 403= non autorisé a acceder a une ressource, 404 = ressource demandée introuvable)
5xx probleme coté serveur 
///
(parsInt) or express envoi tous les params sous forme de caracteres  

/////
configuration_recherche _dans_ findAllPokemon.js
////
//hach
npm install bcrypt --save
//jwt
npm install jsonwebtoken --save

// Pour chaque point de terminison : (passer par un middleware= auth.js)
//1// créer et retourner des jettons valide pour les clients
//2// Sécuriser les échanges de jettons entre le client et l'API REST
//3// extraire le jetton du header et vérifier si ce jetton est valide
//4// en fonction de la validité de ce jetton nous retournerons soit les données demandée par l'utilisateur soit le refus 

//////////////

Deploiment :

1/ git
2/ telecharger heroku CLIet l'installer en suite ouvrir cmd et tapper: heroku login
3/ node test.js (dans vscode)
ajouter dans app.js : const port = process.env.PORT || 3000;
4/ package.json 
 "scripts": {
    "start": "nodemon app.js",
    "dev": "nodemon app.js"
  }
 npm run start (en prod)
npm run dev (en dev)

5/ passer express en mode production
NODE_ENV

// "start": "NODE_ENV=production node app.js",
// "dev": "NODE_ENV=development nodemon app.js"

6/ Ne pas utiliser les dependances de developpement

Enlever morgan du package.json et aussi de app.js
